*{
  margin:0;                       /*Set default margin to 0, so theres no spacing between the webpage*/
}

body{
  background-color: #f5f6fa;
}/*setting the background colour to light gray for the body*/

.app{
  display: flex; /*this is used to make the left and right panel side by side*/
  justify-content: space-evenly; /*thereafter you create space amongst them, space-around will similar action*/
  margin:20px;                   /*to create some space apart from the top*/
}

.app__left{
  flex:0.9;              /*here we use to create more space 0.9(90% vs 10%) for the left panel as compare to the right panel*/
}
.app__header{
  display: flex;
  align-items: center;           /*align the items vertially centered*/
  margin-bottom: 20px;           /*to create spaces below it so the element below it does not stick to it. NOTE: margin adds space outside of the element compared to padding*/
  justify-content: space-between; /*spaces the flex box of app header and the h1 element(a flex box)*/
}
/*here you target the the all the elements in the app header to make it into an flexbox
instead being a span element taking up the whole row*/

.app__stats{
  display: flex; /*makes it into individual boxes allowing it to not span the whole row, using justify content thereafter*/
  justify-content: space-between;
}/*here we target the infoboxes, with a class name of app_stats*/

@media (max-width: 1000px){
  .app{
    flex-direction: column; /*to make it shift the right panel to the bottom so it takes its own row, by changing the flex direction*/
  }
}

/*here we use media query hence when the screen is smallen, the right panel will pop to the bottom*/